{
    "swagger": "2.0",
    "info": {
        "version": "0.1.0",
        "title": "BookMonkey 5 API",
        "description": "**DEMO**\n\nThis is a demo backend for serving books. All data is erased after some inactivity."
    },
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "books",
            "description": "BookMonkey 5 books"
        },
        {
            "name": "notifications",
            "description": "Subscribe to BookMonkey Notifications"
        }
    ],
    "paths": {
        "/books": {
            "delete": {
                "tags": [
                    "books"
                ],
                "summary": "Reset store to initial state",
                "responses": {
                    "200": {
                        "description": "All data is now on initial state"
                    },
                    "500": {
                        "description": "Unexpected Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "books"
                ],
                "summary": "Get all books",
                "responses": {
                    "200": {
                        "description": "List of all books",
                        "schema": {
                            "title": "Books",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Book"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    }
                },
                "security": [{ "ApiKeyAuth": [] }]
            },
            "post": {
                "tags": [
                    "books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "name": "book",
                        "in": "body",
                        "description": "A new book to be stored",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book was created",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    },
                    "409": {
                        "description": "Book does already exist",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    },
                    "500": {
                        "description": "Unexpected Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    }
                }
            }
        },
        "/books/search/{searchTerm}": {
            "get": {
                "tags": [
                    "books"
                ],
                "summary": "Get all books matching the given search term (case insensitive). The properties isbn, title, authors, published, subtitle and description are evaluated for a match.",
                "parameters": [
                    {
                        "name": "searchTerm",
                        "in": "path",
                        "type": "string",
                        "description": "search term (treated case insensitive)",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all books matching the give search term",
                        "schema": {
                            "title": "Books",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Book"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    }
                }
            }
        },
        "/books/{isbn}": {
            "get": {
                "tags": [
                    "books"
                ],
                "summary": "Return a single book by ISBN",
                "parameters": [
                    {
                        "name": "isbn",
                        "in": "path",
                        "type": "string",
                        "description": "ISBN of the book",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the book with the requested ISBN",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    },
                    "404": {
                        "description": "Book does not exist",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    },
                    "500": {
                        "description": "Unexpected Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "books"
                ],
                "summary": "Update an existing book",
                "description": "Requires a full book entry, ISBN in query and body must match",
                "parameters": [
                    {
                        "name": "isbn",
                        "in": "path",
                        "description": "ISBN of the book to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "book",
                        "in": "body",
                        "description": "An existing book to update",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book was updated",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    },
                    "404": {
                        "description": "Book does not exist",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    },
                    "500": {
                        "description": "Unexpected Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "books"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "name": "isbn",
                        "in": "path",
                        "description": "ISBN of the book to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book was deleted or does not exist"
                    },
                    "500": {
                        "description": "Unexpected Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    }
                }
            }
        },
        "/books/{isbn}/check": {
            "get": {
                "tags": [
                    "books"
                ],
                "summary": "Return whether ISBN exists or not",
                "description": "This endpoint returns wether a book exists or not after an artificial delay of 2 seconds.",
                "parameters": [
                    {
                        "name": "isbn",
                        "in": "path",
                        "type": "string",
                        "description": "ISBN of the book",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns whether the ISBN exists in the database or not (boolean)"
                    },
                    "500": {
                        "description": "Unexpected Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "post": {
                "tags": [
                    "notifications"
                ],
                "summary": "Subscribe to notifications, you will receive notifications via web-push after you subscribed to them.",
                "parameters": [
                    {
                        "name": "notification",
                        "in": "body",
                        "description": "The Notification Object which contains the credentials for requesting to receive notifications",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully subscribed to receive notifications"
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    },
                    "422": {
                        "description": "Malformed Data",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    },
                    "500": {
                        "description": "Unexpected Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/RestError"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization",
            "description": "**Use `Bearer 1234567890` as value!**"
        }
    },
    "definitions": {
        "Book": {
            "type": "object",
            "description": "The main entity of this API",
            "required": [
                "isbn",
                "title"
            ],
            "properties": {
                "isbn": {
                    "type": "string",
                    "example": "9783864907791",
                    "description": "ISBN which is used as identifier - only numbers are allowed (no hyphens)"
                },
                "title": {
                    "type": "string",
                    "example": "Angular",
                    "description": "Title of the book"
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of all authors of the book",
                    "example": [
                        "Ferdinand Malcher",
                        "Johannes Hoppe",
                        "Danny Koppenhagen"
                    ]
                },
                "subtitle": {
                    "type": "string",
                    "example": "Grundlagen und Best Practices",
                    "description": "Subtitle of the book"
                },
                "published": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-10-12T00:00:00.000Z",
                    "description": "date-time as defined by RFC3339 (http://www.ietf.org/rfc/rfc3339.txt) - like new Date().toISOString();"
                },
                "description": {
                    "type": "string",
                    "example": "Mit diesem Buch lernen Sie alles über Angular.",
                    "description": "Short description of the book"
                },
                "thumbnailUrl": {
                    "type": "string",
                    "description": "Thumbnail Image URL of the book"
                }
            }
        },
        "Notification": {
            "type": "object",
            "description": "A notifications subscription object (PushSubscriptionJSON), see: https://www.w3.org/TR/push-api/#dom-pushsubscriptionjson",
            "required": [
                "endpoint",
                "keys"
            ],
            "properties": {
                "endpoint": {
                    "type": "string",
                    "example": "https://fcm.googleapis.com/fcm/send/cd8hmcY5ais:APA91bFWhjIBUCcArB8u95YUN-BkEvj8NA52BcvzDeeilQL5wB1RwWy-ki_ZDONyL8jPjsGBHM-efuEqj5KDLfUwQRtIMjLx-2L5RwS45_oESHtaJr9k-WxfHr_jJEnX-Qt8McNhw1dN",
                    "description": "A USVString as defined here https://heycam.github.io/webidl/#idl-USVString"
                },
                "expirationTime": {
                    "type": "string",
                    "example": "1519129853500",
                    "description": "A DOMHighResTimeStamp as defined here https://www.w3.org/TR/hr-time-2/#dom-domhighrestimestamp"
                },
                "keys": {
                    "type": "object",
                    "items": {
                        "$ref": "#/definitions/Keys"
                    },
                    "description": "An Object which contains neccessary keys, see: https://www.w3.org/TR/push-api/#dom-pushencryptionkeyname",
                    "example": {
                        "auth": "hsHpa-Fy-wL3IGTfzOuvYw",
                        "p256dh": "BGu9emiaZez5yWSx66VZLVPmYPtGd4FQG9hxoRcaGJ7qDhEwINS3AvbAWn_brMF08ErsqROyClWXsGCNMPY6PJo"
                    }
                }
            }
        },
        "Keys": {
            "type": "object",
            "description": "An Object which contains neccessary keys (PushEncryptionKeyName), see https://www.w3.org/TR/push-api/#dom-pushsubscriptionjson-keys",
            "required": [
                "auth",
                "p256dh"
            ],
            "properties": {
                "auth": {
                    "type": "string",
                    "example": "hsHpa-Fy-wL3IGTfzOuvYw",
                    "description": "The auth value is used to retrieve the authentication secret described in RFC8291 (https://tools.ietf.org/html/rfc8291)"
                },
                "p256dh": {
                    "type": "string",
                    "example": "BGu9emiaZez5yWSx66VZLVPmYPtGd4FQG9hxoRcaGJ7qDhEwINS3AvbAWn_brMF08ErsqROyClWXsGCNMPY6PJo",
                    "description": "The p256dh value is used to retrieve the P-256 ECDH Diffie-Hellman public key described in RFC8291 (https://tools.ietf.org/html/rfc8291)"
                }
            }
        },
        "RestError": {
            "type": "string",
            "description": "simple string describing the issue"
        }
    }
}
